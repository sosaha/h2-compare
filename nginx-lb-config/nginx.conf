user  nginx;
worker_processes  auto;
worker_rlimit_nofile 10240;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  10240;
    accept_mutex       off;
    multi_accept       off;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  300s;
    keepalive_requests 1000000;

    #gzip  on;

    upstream webserver {
        server 10.0.2.168;
    }

    server {
        listen 80;
        listen 443 ssl backlog=102400 reuseport;

        ssl_certificate     /home/ubuntu/certs_keys/ECDSA_p-256_key_cert.crt; # The certificate file
    	ssl_certificate_key /home/ubuntu/certs_keys/ECDSA_p-256_key_cert.key; # The private key file
	ssl_session_tickets off;
        ssl_session_cache   off;

        root /var/www/html;
            location / {
                proxy_pass http://webserver;
        }
	location /api {
	    api write=on;
	}
	location = /dashboard.html {
	    return 301 /dashboard.html;
	}
    }
    # include /etc/nginx/conf.d/*.conf;
}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}
